version: '3.8'

services:
  # API Service
  api:
    build: .
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
      PG_HOST: postgres
      PG_PORT: 5432
      PG_DATABASE: mcculloch_db
      PG_USERNAME: postgres
      PG_PASSWORD: your_postgres_password
      MONGODB_URI: mongodb://mongodb:27017/mcculloch_logs
      JWT_SECRET: dev_jwt_secret_change_in_production
      ALLOWED_ORIGINS: http://localhost:3000,http://localhost:5173
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_started
      redis:
        condition: service_started
    volumes:
      - ./uploads:/app/uploads
      - ./.env:/app/.env
    networks:
      - mcculloch-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: mcculloch_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: your_postgres_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-postgres.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d mcculloch_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - mcculloch-network
    restart: unless-stopped

  # MongoDB Database
  mongodb:
    image: mongo:7
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: your_mongo_password
      MONGO_INITDB_DATABASE: mcculloch_logs
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - mcculloch-network
    restart: unless-stopped

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass your_redis_password
    volumes:
      - redis_data:/data
    networks:
      - mcculloch-network
    restart: unless-stopped

  # Database Admin Tools (Development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mcculloch.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - mcculloch-network
    profiles: ["dev-tools"]
    restart: unless-stopped

  mongo-express:
    image: mongo-express:latest
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: your_mongo_password
      ME_CONFIG_MONGODB_URL: mongodb://admin:your_mongo_password@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin
    networks:
      - mcculloch-network
    profiles: ["dev-tools"]
    restart: unless-stopped
    depends_on:
      - mongodb

# Volumes for persistent data
volumes:
  postgres_data:
  mongodb_data:
  redis_data:
  pgadmin_data:

# Networks
networks:
  mcculloch-network:
    driver: bridge